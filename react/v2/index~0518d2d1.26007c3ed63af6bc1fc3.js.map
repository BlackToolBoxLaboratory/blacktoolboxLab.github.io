{"version":3,"sources":["webpack://homepage_react/./node_modules/redux-persist/es/constants.js","webpack://homepage_react/./node_modules/redux-persist/es/stateReconciler/autoMergeLevel1.js","webpack://homepage_react/./node_modules/redux-persist/es/createPersistoid.js","webpack://homepage_react/./node_modules/redux-persist/es/getStoredState.js","webpack://homepage_react/./node_modules/redux-persist/es/purgeStoredState.js","webpack://homepage_react/./node_modules/redux-persist/es/persistReducer.js","webpack://homepage_react/./node_modules/redux-persist/es/persistStore.js"],"names":["KEY_PREFIX","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","_typeof","obj","Symbol","iterator","constructor","prototype","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_defineProperty","key","value","defineProperty","configurable","writable","autoMergeLevel1","inboundState","originalState","reducedState","_ref","debug","newState","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","_objectSpread","createPersistoid","config","serialize","blacklist","whitelist","transforms","throttle","storageKey","concat","undefined","keyPrefix","storage","x","defaultSerialize","writeFailHandler","lastState","stagedState","keysToProcess","timeIterator","writePromise","processNextKey","clearInterval","shift","endState","reduce","subState","transformer","in","err","console","error","setItem","catch","onWriteFail","passWhitelistBlacklist","indexOf","update","state","setInterval","flush","Promise","resolve","data","JSON","stringify","deserialize","defaultDeserialize","getItem","then","serialized","rawState","reduceRight","out","serial","parse","warnIfRemoveError","_objectWithoutProperties","excluded","sourceKeys","_objectWithoutPropertiesLoose","sourceSymbolKeys","propertyIsEnumerable","call","baseReducer","version","stateReconciler","getStoredState","timeout","_persistoid","_purge","_paused","conditionalUpdate","_persist","rehydrated","action","restState","type","_sealed","_rehydrate","payload","rehydrate","setTimeout","Error","register","restoredState","migrate","s","v","migratedState","migrateErr","result","removeItem","purgeStoredState","_newState","_toConsumableArray","arr","Array","isArray","arr2","_arrayWithoutHoles","iter","toString","from","_iterableToArray","TypeError","_nonIterableSpread","initialState","registry","bootstrapped","persistorReducer","firstIndex","splice","persistStore","store","options","cb","boostrappedCb","_pStore","enhancer","dispatch","rehydrateAction","persistor","getState","purge","results","purgeResult","all","flushResult","pause","persist","manualPersist"],"mappings":"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","file":"index~0518d2d1.26007c3ed63af6bc1fc3.js","sourcesContent":["export var KEY_PREFIX = 'persist:';\nexport var FLUSH = 'persist/FLUSH';\nexport var REHYDRATE = 'persist/REHYDRATE';\nexport var PAUSE = 'persist/PAUSE';\nexport var PERSIST = 'persist/PERSIST';\nexport var PURGE = 'persist/PURGE';\nexport var REGISTER = 'persist/REGISTER';\nexport var DEFAULT_VERSION = -1;","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/*\n  autoMergeLevel1: \n    - merges 1 level of substate\n    - skips substate if already modified\n*/\nexport default function autoMergeLevel1(inboundState, originalState, reducedState, _ref) {\n  var debug = _ref.debug;\n\n  var newState = _objectSpread({}, reducedState); // only rehydrate if inboundState exists and is an object\n\n\n  if (inboundState && _typeof(inboundState) === 'object') {\n    Object.keys(inboundState).forEach(function (key) {\n      // ignore _persist data\n      if (key === '_persist') return; // if reducer modifies substate, skip auto rehydration\n\n      if (originalState[key] !== reducedState[key]) {\n        if (process.env.NODE_ENV !== 'production' && debug) console.log('redux-persist/stateReconciler: sub state for key `%s` modified, skipping.', key);\n        return;\n      } // otherwise hard set the new value\n\n\n      newState[key] = inboundState[key];\n    });\n  }\n\n  if (process.env.NODE_ENV !== 'production' && debug && inboundState && _typeof(inboundState) === 'object') console.log(\"redux-persist/stateReconciler: rehydrated keys '\".concat(Object.keys(inboundState).join(', '), \"'\"));\n  return newState;\n}","import { KEY_PREFIX, REHYDRATE } from './constants';\n// @TODO remove once flow < 0.63 support is no longer required.\nexport default function createPersistoid(config) {\n  // defaults\n  var blacklist = config.blacklist || null;\n  var whitelist = config.whitelist || null;\n  var transforms = config.transforms || [];\n  var throttle = config.throttle || 0;\n  var storageKey = \"\".concat(config.keyPrefix !== undefined ? config.keyPrefix : KEY_PREFIX).concat(config.key);\n  var storage = config.storage;\n  var serialize;\n\n  if (config.serialize === false) {\n    serialize = function serialize(x) {\n      return x;\n    };\n  } else if (typeof config.serialize === 'function') {\n    serialize = config.serialize;\n  } else {\n    serialize = defaultSerialize;\n  }\n\n  var writeFailHandler = config.writeFailHandler || null; // initialize stateful values\n\n  var lastState = {};\n  var stagedState = {};\n  var keysToProcess = [];\n  var timeIterator = null;\n  var writePromise = null;\n\n  var update = function update(state) {\n    // add any changed keys to the queue\n    Object.keys(state).forEach(function (key) {\n      if (!passWhitelistBlacklist(key)) return; // is keyspace ignored? noop\n\n      if (lastState[key] === state[key]) return; // value unchanged? noop\n\n      if (keysToProcess.indexOf(key) !== -1) return; // is key already queued? noop\n\n      keysToProcess.push(key); // add key to queue\n    }); //if any key is missing in the new state which was present in the lastState,\n    //add it for processing too\n\n    Object.keys(lastState).forEach(function (key) {\n      if (state[key] === undefined && passWhitelistBlacklist(key) && keysToProcess.indexOf(key) === -1 && lastState[key] !== undefined) {\n        keysToProcess.push(key);\n      }\n    }); // start the time iterator if not running (read: throttle)\n\n    if (timeIterator === null) {\n      timeIterator = setInterval(processNextKey, throttle);\n    }\n\n    lastState = state;\n  };\n\n  function processNextKey() {\n    if (keysToProcess.length === 0) {\n      if (timeIterator) clearInterval(timeIterator);\n      timeIterator = null;\n      return;\n    }\n\n    var key = keysToProcess.shift();\n    var endState = transforms.reduce(function (subState, transformer) {\n      return transformer.in(subState, key, lastState);\n    }, lastState[key]);\n\n    if (endState !== undefined) {\n      try {\n        stagedState[key] = serialize(endState);\n      } catch (err) {\n        console.error('redux-persist/createPersistoid: error serializing state', err);\n      }\n    } else {\n      //if the endState is undefined, no need to persist the existing serialized content\n      delete stagedState[key];\n    }\n\n    if (keysToProcess.length === 0) {\n      writeStagedState();\n    }\n  }\n\n  function writeStagedState() {\n    // cleanup any removed keys just before write.\n    Object.keys(stagedState).forEach(function (key) {\n      if (lastState[key] === undefined) {\n        delete stagedState[key];\n      }\n    });\n    writePromise = storage.setItem(storageKey, serialize(stagedState)).catch(onWriteFail);\n  }\n\n  function passWhitelistBlacklist(key) {\n    if (whitelist && whitelist.indexOf(key) === -1 && key !== '_persist') return false;\n    if (blacklist && blacklist.indexOf(key) !== -1) return false;\n    return true;\n  }\n\n  function onWriteFail(err) {\n    // @TODO add fail handlers (typically storage full)\n    if (writeFailHandler) writeFailHandler(err);\n\n    if (err && process.env.NODE_ENV !== 'production') {\n      console.error('Error storing data', err);\n    }\n  }\n\n  var flush = function flush() {\n    while (keysToProcess.length !== 0) {\n      processNextKey();\n    }\n\n    return writePromise || Promise.resolve();\n  }; // return `persistoid`\n\n\n  return {\n    update: update,\n    flush: flush\n  };\n} // @NOTE in the future this may be exposed via config\n\nfunction defaultSerialize(data) {\n  return JSON.stringify(data);\n}","import { KEY_PREFIX } from './constants';\nexport default function getStoredState(config) {\n  var transforms = config.transforms || [];\n  var storageKey = \"\".concat(config.keyPrefix !== undefined ? config.keyPrefix : KEY_PREFIX).concat(config.key);\n  var storage = config.storage;\n  var debug = config.debug;\n  var deserialize;\n\n  if (config.deserialize === false) {\n    deserialize = function deserialize(x) {\n      return x;\n    };\n  } else if (typeof config.deserialize === 'function') {\n    deserialize = config.deserialize;\n  } else {\n    deserialize = defaultDeserialize;\n  }\n\n  return storage.getItem(storageKey).then(function (serialized) {\n    if (!serialized) return undefined;else {\n      try {\n        var state = {};\n        var rawState = deserialize(serialized);\n        Object.keys(rawState).forEach(function (key) {\n          state[key] = transforms.reduceRight(function (subState, transformer) {\n            return transformer.out(subState, key, rawState);\n          }, deserialize(rawState[key]));\n        });\n        return state;\n      } catch (err) {\n        if (process.env.NODE_ENV !== 'production' && debug) console.log(\"redux-persist/getStoredState: Error restoring data \".concat(serialized), err);\n        throw err;\n      }\n    }\n  });\n}\n\nfunction defaultDeserialize(serial) {\n  return JSON.parse(serial);\n}","import { KEY_PREFIX } from './constants';\nexport default function purgeStoredState(config) {\n  var storage = config.storage;\n  var storageKey = \"\".concat(config.keyPrefix !== undefined ? config.keyPrefix : KEY_PREFIX).concat(config.key);\n  return storage.removeItem(storageKey, warnIfRemoveError);\n}\n\nfunction warnIfRemoveError(err) {\n  if (err && process.env.NODE_ENV !== 'production') {\n    console.error('redux-persist/purgeStoredState: Error purging data stored state', err);\n  }\n}","function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { FLUSH, PAUSE, PERSIST, PURGE, REHYDRATE, DEFAULT_VERSION } from './constants';\nimport autoMergeLevel1 from './stateReconciler/autoMergeLevel1';\nimport createPersistoid from './createPersistoid';\nimport defaultGetStoredState from './getStoredState';\nimport purgeStoredState from './purgeStoredState';\nvar DEFAULT_TIMEOUT = 5000;\n/*\n  @TODO add validation / handling for:\n  - persisting a reducer which has nested _persist\n  - handling actions that fire before reydrate is called\n*/\n\nexport default function persistReducer(config, baseReducer) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (!config) throw new Error('config is required for persistReducer');\n    if (!config.key) throw new Error('key is required in persistor config');\n    if (!config.storage) throw new Error(\"redux-persist: config.storage is required. Try using one of the provided storage engines `import storage from 'redux-persist/lib/storage'`\");\n  }\n\n  var version = config.version !== undefined ? config.version : DEFAULT_VERSION;\n  var debug = config.debug || false;\n  var stateReconciler = config.stateReconciler === undefined ? autoMergeLevel1 : config.stateReconciler;\n  var getStoredState = config.getStoredState || defaultGetStoredState;\n  var timeout = config.timeout !== undefined ? config.timeout : DEFAULT_TIMEOUT;\n  var _persistoid = null;\n  var _purge = false;\n  var _paused = true;\n\n  var conditionalUpdate = function conditionalUpdate(state) {\n    // update the persistoid only if we are rehydrated and not paused\n    state._persist.rehydrated && _persistoid && !_paused && _persistoid.update(state);\n    return state;\n  };\n\n  return function (state, action) {\n    var _ref = state || {},\n        _persist = _ref._persist,\n        rest = _objectWithoutProperties(_ref, [\"_persist\"]); // $FlowIgnore need to update State type\n\n\n    var restState = rest;\n\n    if (action.type === PERSIST) {\n      var _sealed = false;\n\n      var _rehydrate = function _rehydrate(payload, err) {\n        // dev warning if we are already sealed\n        if (process.env.NODE_ENV !== 'production' && _sealed) console.error(\"redux-persist: rehydrate for \\\"\".concat(config.key, \"\\\" called after timeout.\"), payload, err); // only rehydrate if we are not already sealed\n\n        if (!_sealed) {\n          action.rehydrate(config.key, payload, err);\n          _sealed = true;\n        }\n      };\n\n      timeout && setTimeout(function () {\n        !_sealed && _rehydrate(undefined, new Error(\"redux-persist: persist timed out for persist key \\\"\".concat(config.key, \"\\\"\")));\n      }, timeout); // @NOTE PERSIST resumes if paused.\n\n      _paused = false; // @NOTE only ever create persistoid once, ensure we call it at least once, even if _persist has already been set\n\n      if (!_persistoid) _persistoid = createPersistoid(config); // @NOTE PERSIST can be called multiple times, noop after the first\n\n      if (_persist) {\n        // We still need to call the base reducer because there might be nested\n        // uses of persistReducer which need to be aware of the PERSIST action\n        return _objectSpread({}, baseReducer(restState, action), {\n          _persist: _persist\n        });\n      }\n\n      if (typeof action.rehydrate !== 'function' || typeof action.register !== 'function') throw new Error('redux-persist: either rehydrate or register is not a function on the PERSIST action. This can happen if the action is being replayed. This is an unexplored use case, please open an issue and we will figure out a resolution.');\n      action.register(config.key);\n      getStoredState(config).then(function (restoredState) {\n        var migrate = config.migrate || function (s, v) {\n          return Promise.resolve(s);\n        };\n\n        migrate(restoredState, version).then(function (migratedState) {\n          _rehydrate(migratedState);\n        }, function (migrateErr) {\n          if (process.env.NODE_ENV !== 'production' && migrateErr) console.error('redux-persist: migration error', migrateErr);\n\n          _rehydrate(undefined, migrateErr);\n        });\n      }, function (err) {\n        _rehydrate(undefined, err);\n      });\n      return _objectSpread({}, baseReducer(restState, action), {\n        _persist: {\n          version: version,\n          rehydrated: false\n        }\n      });\n    } else if (action.type === PURGE) {\n      _purge = true;\n      action.result(purgeStoredState(config));\n      return _objectSpread({}, baseReducer(restState, action), {\n        _persist: _persist\n      });\n    } else if (action.type === FLUSH) {\n      action.result(_persistoid && _persistoid.flush());\n      return _objectSpread({}, baseReducer(restState, action), {\n        _persist: _persist\n      });\n    } else if (action.type === PAUSE) {\n      _paused = true;\n    } else if (action.type === REHYDRATE) {\n      // noop on restState if purging\n      if (_purge) return _objectSpread({}, restState, {\n        _persist: _objectSpread({}, _persist, {\n          rehydrated: true\n        }) // @NOTE if key does not match, will continue to default else below\n\n      });\n\n      if (action.key === config.key) {\n        var reducedState = baseReducer(restState, action);\n        var inboundState = action.payload; // only reconcile state if stateReconciler and inboundState are both defined\n\n        var reconciledRest = stateReconciler !== false && inboundState !== undefined ? stateReconciler(inboundState, state, reducedState, config) : reducedState;\n\n        var _newState = _objectSpread({}, reconciledRest, {\n          _persist: _objectSpread({}, _persist, {\n            rehydrated: true\n          })\n        });\n\n        return conditionalUpdate(_newState);\n      }\n    } // if we have not already handled PERSIST, straight passthrough\n\n\n    if (!_persist) return baseReducer(state, action); // run base reducer:\n    // is state modified ? return original : return updated\n\n    var newState = baseReducer(restState, action);\n    if (newState === restState) return state;\n    return conditionalUpdate(_objectSpread({}, newState, {\n      _persist: _persist\n    }));\n  };\n}","function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { createStore } from 'redux';\nimport { FLUSH, PAUSE, PERSIST, PURGE, REGISTER, REHYDRATE } from './constants';\nvar initialState = {\n  registry: [],\n  bootstrapped: false\n};\n\nvar persistorReducer = function persistorReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case REGISTER:\n      return _objectSpread({}, state, {\n        registry: [].concat(_toConsumableArray(state.registry), [action.key])\n      });\n\n    case REHYDRATE:\n      var firstIndex = state.registry.indexOf(action.key);\n\n      var registry = _toConsumableArray(state.registry);\n\n      registry.splice(firstIndex, 1);\n      return _objectSpread({}, state, {\n        registry: registry,\n        bootstrapped: registry.length === 0\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default function persistStore(store, options, cb) {\n  // help catch incorrect usage of passing PersistConfig in as PersistorOptions\n  if (process.env.NODE_ENV !== 'production') {\n    var optionsToTest = options || {};\n    var bannedKeys = ['blacklist', 'whitelist', 'transforms', 'storage', 'keyPrefix', 'migrate'];\n    bannedKeys.forEach(function (k) {\n      if (!!optionsToTest[k]) console.error(\"redux-persist: invalid option passed to persistStore: \\\"\".concat(k, \"\\\". You may be incorrectly passing persistConfig into persistStore, whereas it should be passed into persistReducer.\"));\n    });\n  }\n\n  var boostrappedCb = cb || false;\n\n  var _pStore = createStore(persistorReducer, initialState, options && options.enhancer ? options.enhancer : undefined);\n\n  var register = function register(key) {\n    _pStore.dispatch({\n      type: REGISTER,\n      key: key\n    });\n  };\n\n  var rehydrate = function rehydrate(key, payload, err) {\n    var rehydrateAction = {\n      type: REHYDRATE,\n      payload: payload,\n      err: err,\n      key: key // dispatch to `store` to rehydrate and `persistor` to track result\n\n    };\n    store.dispatch(rehydrateAction);\n\n    _pStore.dispatch(rehydrateAction);\n\n    if (boostrappedCb && persistor.getState().bootstrapped) {\n      boostrappedCb();\n      boostrappedCb = false;\n    }\n  };\n\n  var persistor = _objectSpread({}, _pStore, {\n    purge: function purge() {\n      var results = [];\n      store.dispatch({\n        type: PURGE,\n        result: function result(purgeResult) {\n          results.push(purgeResult);\n        }\n      });\n      return Promise.all(results);\n    },\n    flush: function flush() {\n      var results = [];\n      store.dispatch({\n        type: FLUSH,\n        result: function result(flushResult) {\n          results.push(flushResult);\n        }\n      });\n      return Promise.all(results);\n    },\n    pause: function pause() {\n      store.dispatch({\n        type: PAUSE\n      });\n    },\n    persist: function persist() {\n      store.dispatch({\n        type: PERSIST,\n        register: register,\n        rehydrate: rehydrate\n      });\n    }\n  });\n\n  if (!(options && options.manualPersist)) {\n    persistor.persist();\n  }\n\n  return persistor;\n}"],"sourceRoot":""}